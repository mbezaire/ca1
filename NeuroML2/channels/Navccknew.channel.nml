<?xml version="1.0" encoding="ISO-8859-1"?>
<neuroml xmlns="http://www.neuroml.org/schema/neuroml2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.neuroml.org/schema/neuroml2 https://raw.github.com/NeuroML/NeuroML2/development/Schemas/NeuroML2/NeuroML_v2beta4.xsd" id="NeuroML_ionChannel">

    <notes>NeuroML file containing a single ion channel</notes>

    <ionChannel id="Navccknew" conductance="10pS" type="ionChannelHH" species="na">
        
        <notes>Na+ channel description; modified from Nav to have higher threshold and slow inactivation (suitable for cck cells) rates are different + additional s variable - hence the name new</notes>
    
        <gate id="m" type="gateHHrates" instances="3">
            <q10Settings type="q10ExpTemp" q10Factor="3" experimentalTemp="34 degC"/>
            <forwardRate type="HHExpLinearRate" rate="2.5per_ms" midpoint="-42mV" scale="5mV"/>  <!--rate="3per_ms" midpoint="-44mV"-->  
            <reverseRate type="HHExpLinearRate" rate="1.5per_ms" midpoint="-13mV" scale="-5mV"/>  <!--midpoint="-14.5mV"-->
        </gate>
        
        <gate id="h" type="gateHHrates" instances="1">
            <q10Settings type="q10ExpTemp" q10Factor="3" experimentalTemp="34 degC"/>
            <forwardRate type="Bezaire_Navcck_alphah"/>
            <reverseRate type="HHSigmoidRate" rate="1.3per_ms" midpoint="-12.5mV" scale="10mV"/>  <!-- rate="2.25per_ms" -->
        </gate>
        
        <!--whole new gating variable-->
        <gate id="s" type="gateHHtauInf" instances="1">
            <q10Settings type="q10ExpTemp" q10Factor="3" experimentalTemp="34 degC"/>
            <timeCourse type="Bezaire_Navcck_taus"/>
            <steadyState type="Bezaire_Navcck_sss"/>
        </gate>
        
    </ionChannel>
    
    
    <ComponentType name="Bezaire_Navcck_alphah"
            extends="baseVoltageDepRate"
            description="forward rate to describe Navcck">
        
        <Constant name="TIME_SCALE" dimension="time" value="1 ms"/>
        <Constant name="VOLT_SCALE" dimension="voltage" value="1 mV"/>
        
        <Dynamics>
            <DerivedVariable name="V" dimension="none" value="v / VOLT_SCALE"/> 
                  
            <DerivedVariable name="r" dimension="per_time" value="(0.6 / (exp((V+65)/20))) / TIME_SCALE" exposure="r"/>  <!--(0.35 / ...-->       
        </Dynamics>
        
    </ComponentType>
    
    <ComponentType name="Bezaire_Navcck_taus"
                   extends="baseVoltageDepTime"
                   description="Tau parameter to describe Navcck">
        
        <Constant name="TIME_SCALE" dimension="time" value="1 ms"/>
        <Constant name="VOLT_SCALE" dimension="voltage" value="1 mV"/>
        
        <Requirement name="rateScale" dimension="none"/> 
        <Requirement name="temperature" dimension="temperature"/>

        <Dynamics>
            <DerivedVariable name="V" dimension="none" value="v / VOLT_SCALE"/>
            
            <DerivedVariable name="alpha" dimension="none" value="0.003 / (exp((V+45)/6))"/>
            <DerivedVariable name="beta" dimension="none" value="0.005 * (1 / (1 + exp(0-(V+35)/20)))"/>
            
            <DerivedVariable name="tmp" value="1 / (alpha + beta)" dimension="none"/>
            <ConditionalDerivedVariable name="t" dimension="time" exposure="t" >
                <Case condition="(tmp / rateScale) .lt. 10" value="10 * rateScale * TIME_SCALE"/>
                <Case value="tmp * TIME_SCALE"/>                
            </ConditionalDerivedVariable>

        </Dynamics>

    </ComponentType>
    
    <ComponentType name="Bezaire_Navcck_sss"
                   extends="baseVoltageDepVariable"
                   description="steadyState parameter to describe Navcck">
        
        <Constant name="VOLT_SCALE" dimension="voltage" value="1 mV"/>

        <Dynamics>
            <DerivedVariable name="V" dimension="none" value="v / VOLT_SCALE"/>
            
            <DerivedVariable name="alpha" dimension="none" value="0.003 / (exp((V+45)/6))"/>
            <DerivedVariable name="beta" dimension="none" value="0.005 * (1 / (1 + exp(0-(V+35)/20)))"/>
 
            <DerivedVariable name="x" exposure="x" dimension="none" value="alpha / (alpha + beta)"/>
        </Dynamics>

    </ComponentType>

    
</neuroml>
